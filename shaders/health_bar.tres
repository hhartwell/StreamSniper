[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
uniform vec4 color : hint_color;
uniform vec4 color_2 : hint_color;
uniform float health;

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = color.rgb;
	float n_out2p1 = color.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.50000, 0.50000);
//	vec3 n_out8p0 = n_out2p0 * n_in8p1;
	vec3 n_out8p0 = color_2.rgb;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarUniform:6
	float n_out6p0 = health;

// Compare:5
	bool n_out5p0 = n_out4p0>=n_out6p0;

// VectorMix:7
	vec3 n_out7p0 = mix(n_out2p0, n_out8p0, vec3(n_out5p0 ? 1.0 : 0.0));

// Output:0
	COLOR.rgb = n_out7p0;

}"

[resource]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/color = Color( 0.282353, 0.678431, 0.156863, 1 )
shader_param/color_2 = Color( 0.972549, 0.972549, 0.972549, 1 )
shader_param/health = 1.0
